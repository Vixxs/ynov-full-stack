version: "3.8"
services:
  # PHP service
  user:
    build: ./user
    container_name: service-user
    working_dir: /var/www/
    volumes:
      - ./user:/var/www
      - ./user/vendor:/var/www/vendor
    networks:
      - app-network

  next:
    build:
      context: ./
      dockerfile: ./vitrine/Dockerfile
    container_name: next
    working_dir: /var/www/
    volumes:
      - ./vitrine:/var/www
      - /var/www/node_modules
      - ./my-lib-ui:/my-lib-ui
      - /var/my-lib-ui/node_modules
    networks:
      - app-network
    ports:
      - "3000:3000"

  proxy:
    build: ./proxy
    container_name: service-proxy
    working_dir: /var/www/
    volumes:
      - ./proxy:/var/www
      - /var/www/node_modules
    networks:
      - app-network
    ports:
      - "8000:8000"

  # MySQL database service
  db:
    image: mysql:5.7
    container_name: mysql-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: lesson
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    networks:
      - app-network

  # Nginx service
  nginx:
    image: nginx:alpine
    container_name: php-nginx
    volumes:
      - ./user:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
